#include <iostream>
#include <algorithm>

using namespace std;

int b[100][100], n, m;
int s[100][100];
int a[100][100];

int main()
{
    int i, j, sum = 0, sum1 = 0,  k = 0, x, y, lastSum = 0;
    cin >> n >> m;
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= m; j++)
        {
            s[i][j] = 0;
        }
    }
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= m; j++)
        {
            cin >> a[i][j];
        }
    }
    s[n][m] = a[n][m];
    for (i = 1; i <= n; i++)
    {
        sum += (a[1][i]);
        b[1][i] = sum;
        sum1 += (a[i][1]);
        b[i][1] = sum1;
    }
 
    for (i = 2; i <= n; i++)
        for (j = 2; j <= m; j++)
            b[i][j] = min(b[i][j - 1], b[i - 1][j]) + (a[i][j]);
    x = n;
    y = m;
    while (x != 0 && y != 0)
    {
        if (b[x][y - 1] <= b[x - 1][y] && x > 1 && y > 1)
        {
            s[x][y - 1] = a[x][y - 1];
            y--;
        }
        else if (b[x - 1][y] < b[x][y - 1] && x > 1 && y > 1)
        {
            s[x - 1][y] = a[x - 1][y];
            x--;
        }
        else if (x == 1)
        {
            s[x][y - 1] = a[x][y - 1];
            y--;
        }
        else if (y == 1)
        {
            s[x - 1][y] = a[x-1][y];
            x--;
        }
        if (x == 0 && y == 0)
            break;
}
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= m; j++)
        {
            //cout << s[i][j] ;
            lastSum += s[i][j];
        }
        //cout << endl;
    }
    cout << lastSum << endl;
    return 0;
}