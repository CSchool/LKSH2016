#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct gangster {
	int moment, money, fat;
};

bool cmp(const gangster&s1, const gangster&s2) {
	return s1.moment < s2.moment;
}

int main() {

	int n, k, t;
	cin >> n >> k >> t;

	vector<gangster> badBoys(n);
	vector<int> payment(n, 0);

	for (int i = 0; i < n; i++) {
		cin >> badBoys[i].moment;
	}

	for (int i = 0; i < n; i++) {
		cin >> badBoys[i].money;
	}

	for (int i = 0; i < n; i++) {
		cin >> badBoys[i].fat;
	}

	sort(badBoys.begin(), badBoys.end(), cmp);

	for (int i = n - 1; i >= 0; i--) {
		if (badBoys[i].moment >= badBoys[i].fat) {
			payment[i] = badBoys[i].money;
			for (int j = i + 1; j < n; j++) {
				if (badBoys[j].moment - badBoys[i].moment >= abs(badBoys[i].fat - badBoys[j].fat)) {
					if (payment[i] < badBoys[i].money + payment[j]) {
						payment[i] = badBoys[i].money + payment[j];
					}
				}
			}
		}
	}

	int max = 0;

	for (int i = 0; i < n; i++)
		if (payment[i] > max)
			max = payment[i];

	cout << max;

	//system("pause");
	return 0;
}