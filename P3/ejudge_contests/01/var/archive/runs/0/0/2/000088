#include <iostream>
#include <vector>
//#include <conio.h>

using namespace std;

vector<int> v;
vector<char> c;

int PivotList(int f, int l) {
	int value = v[f], point = f;
	for (int i = f + 1; i <= l; i++) {
		if (v[i] < value) {
			point++;
			swap(v[point], v[i]);
			swap(c[point], c[i]);
		}
	}
	swap(v[f], v[point]);
	swap(c[f], c[point]);
	return point;
}

void Quicksort(int f, int l) {
	if (f < l) {
		int p = PivotList(f, l);
		Quicksort(f, p - 1);
		Quicksort(p + 1, l);
	}
}

int main() {
	int n;
	const char color[3] = { 'R', 'G' , 'B' };
	unsigned long long s[3] = { 0, 0, 0 };
	cin >> n;

	for (int i = 0; i < n; i++) {
		int a; char b;
		cin >> a >> b;
		v.push_back(a);
		c.push_back(b);
	}

	Quicksort(0, n - 1);

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 3; j++) {
			if (i > 0)
				s[j] += c[i] == color[j] ? (v[i] * v[i] * 4 + v[i] * v[i] - v[i - 1] * v[i - 1]) : 0;
			else
				s[j] += c[i] == color[j] ? v[i] * v[i] * 5 : 0;
		}
	}

	cout << "R - " << s[0] << endl;
	cout << "G - " << s[1] << endl;
	cout << "B - " << s[2] << endl;

	//_getch();
	return 0;
}