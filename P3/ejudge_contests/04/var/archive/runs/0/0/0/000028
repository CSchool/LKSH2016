var
  kount, i, j, max, min, pas, kmax: longint;
  mas, check, ansver: array[0..10001] of longint;

procedure find(n, k: longint);
var
  a: longint;
  
  function last(n: longint): longint;
  var
    a, b: longint;
  begin
    a := n;
    for a := n downto 0 do
      if check[a] = 1 then
      begin
        b := a;
        break;
      end;
    last := b;
  end;

begin
  if n < kount then
  begin
    if mas[n] > mas[last(n)] then
    begin
      check[n] := 1;
      find(n + 1, k + 1);
      check[n] := 0;
      find(n + 1, k);
    end else find(n + 1, k);
  end else
  if k > kmax then
  begin
    if mas[n] > mas[last(n)] then check[n] := 1;
    for a := 1 to n do ansver[a] := check[a];
    kmax := k;
    check[n] := 0;
  end;
end;

begin
  
  ansver[0] := 1;
  
  mas[0] := -1;
  
  min := 60001;
  
  read(kount);
  
  for i := 1 to kount do read(mas[i]);
  {
  for i:=1 to kount do if mas[i]>max then max:=mas[i];
  
  for i:=1 to kount do if mas[i]<min then min:=mas[i];
  }
  {pas:=min;
  
  for i:=1 to n do
   for j:=pas to max do if mas[i]=j then
    begin
    ansver[i]:=1;
    pas:=j;
    end;}
  
  find(1, 0);
  
  for i := 1 to kount do if ansver[i] = 1 then write(mas[i], ' ');
  
end.